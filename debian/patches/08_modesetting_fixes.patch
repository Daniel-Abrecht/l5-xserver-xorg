diff --git a/hw/xfree86/drivers/modesetting/driver.c b/hw/xfree86/drivers/modesetting/driver.c
index ef4a3147d..a23554c1f 100644
--- a/hw/xfree86/drivers/modesetting/driver.c
+++ b/hw/xfree86/drivers/modesetting/driver.c
@@ -453,7 +453,6 @@ Probe(DriverPtr drv, int flags)
     GDevPtr *devSections;
     Bool foundScreen = FALSE;
     const char *dev;
-    ScrnInfoPtr scrn = NULL;
 
     /* For now, just bail out for PROBE_DETECT. */
     if (flags & PROBE_DETECT)
@@ -468,12 +467,13 @@ Probe(DriverPtr drv, int flags)
     }
 
     for (i = 0; i < numDevSections; i++) {
+        ScrnInfoPtr scrn = NULL;
         int entity_num;
+
         dev = xf86FindOptionValue(devSections[i]->options, "kmsdev");
         if (probe_hw(dev, NULL)) {
-
-            entity_num = xf86ClaimFbSlot(drv, 0, devSections[i], TRUE);
-            scrn = xf86ConfigFbEntity(scrn, 0, entity_num, NULL, NULL, NULL, NULL);
+            entity_num = xf86ClaimNoSlot(drv, 0, devSections[i], TRUE);
+            scrn = xf86ConfigFbEntity(NULL, devSections[i]->myScreenSection->device != devSections[i] ? XF86_ALLOCATE_GPU_SCREEN : 0, entity_num, NULL, NULL, NULL, NULL);
         }
 
         if (scrn) {
@@ -1041,7 +1041,7 @@ PreInit(ScrnInfoPtr pScrn, int flags)
     }
 
     if (xf86ReturnOptValBool(ms->drmmode.Options, OPTION_ATOMIC, FALSE)) {
-        ret = drmSetClientCap(ms->fd, DRM_CLIENT_CAP_ATOMIC, 1);
+        ret = drmSetClientCap(ms->fd, DRM_CLIENT_CAP_ATOMIC, 2);
         ms->atomic_modeset = (ret == 0);
     } else {
         ms->atomic_modeset = FALSE;
